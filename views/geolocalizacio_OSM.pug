doctype html
html(lang="ca")
  head
    title DAW2
    meta(charset="utf-8")
    link(rel="stylesheet", href="https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.4.3/css/ol.css", type="text/css")
    link(rel="stylesheet", href="./style.css")
    script(src="https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.4.3/build/ol.js")
    style(type="text/css").
      html {
          height: 100%;
      }
      body {
          height: 50%;
          margin: 0;
          padding: 0;
      }
      #mapa {
          height: 400px;
          width: 100%;
      }
  body
    h1 Geolocalitzaci√≥ API
    #mapa(style="width:100%; height:100%")
    script(type="text/javascript").
      const onSuccess = function(position) {
        //- Here I define a style of the circumference that shows the current position.
        var style = new ol.style.Style({
          image: new ol.style.Circle({
            radius: 10,
            snapToPixel: false,
            fill: new ol.style.Fill({color: 'black'}),
            stroke: new ol.style.Stroke({
              color: 'white', width: 5
            })
          })
        });

        const pos = new ol.View({
          center: ol.proj.fromLonLat([position.coords.longitude, position.coords.latitude]),
          zoom: 18
        });
        
        const map = new ol.Map({
          layers: [
            new ol.layer.Tile({
              source: new ol.source.OSM(),
            }),
          ],
          target: "mapa",
          controls: ol.control.defaults({
            attributionOptions: {
              collapsible: false,
            },
          }),
          view: pos
        });

        // Add a vector layer and a point feature to represent the user's position, created with help of chatgpt.
        const vectorLayer = new ol.layer.Vector({
          source: new ol.source.Vector({
            features: [
              new ol.Feature({
                geometry: new ol.geom.Point(ol.proj.fromLonLat([position.coords.longitude, position.coords.latitude]))
              })
            ]
          })
        });

        vectorLayer.setStyle(style);

        map.addLayer(vectorLayer);
      };
      
      const onError = function(error) {
        console.error('Error occurred while retrieving geolocation:', error);
      };
      
      navigator.geolocation.getCurrentPosition(onSuccess, onError);
